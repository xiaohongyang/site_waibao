var DSG={
	clickbool:true,
	init:function(isIndex,isPage){
    this.inFocus();
	  this.radio();
	  if(!isPage)this.select();
	  this.tab();

	},


	//评分

	Score:function(){
    var score=$(".score"),scoreB=score.children(),scoreEm=score.siblings();
    var l=parseInt($(".vip_con").offset().left)+71,max=scoreEm.width()+2;
    var isN=function(num) {
      if (!isNaN(num)) {
        return ((num + '').indexOf('.') != -1) ? true : false;
      }
    }
    scoreEm.on("mousemove",function(ev){
      var x=ev.pageX;
      var pos=Math.round(Math.max(0,(x-l)/max)*100);
      if(pos<=100){
         $(this).find("em").css({'width':pos+'%'});
	       var pose=Math.max(1,Math.round(pos/2)/10);
	       !isN(pose)?score=pose+".0":pose;
	       scoreEm.children().children().text(score);
      }
    })
  },
	//判断是否为空
	IsNullOrEmpty:function(str) {
	    if (str == null || str == undefined || typeof str == undefined || str=="null" || str=="undefined" || String(str) == "") {
	        return true;
	    }
	    else {
	        return false;
	    }
	},
	//重定义单选
	radio:function(){
		var $el = $("[data-change]"),t=true;
		$el.each(function(){
		  var iSradio=$(this).attr("data-iSradio"),toggle=$(this).attr("data-toggle"),checked=$(this).attr("data-methods");
          $(this).on('click',function(){
           $(this).attr("data-val",0).find('i.icon').attr('class','icon radio-on');
            if(iSradio=="true"){
            	var _this=$(this).parent().siblings().find("label").attr("data-val",1);
              _this.find('i.icon').attr('class','icon radio');
              if($(".new_add")!==undefined){
              	 var add=$(".new_add"),iSshow=add.css("display") == "none";
	               iSshow?add.show():add.hide();
			        }
            }else if(toggle=="true"){
            	 var status = ($(this).data('change') == 'un'+checked) ? checked+"-on": checked,
                     m = ($(this).data('change') == 'un'+checked) ?checked:'un'+checked,
                     value=($(this).data('change') == checked) ? '0':'1';
                     $(this).attr("data-val",value).find('i.icon').attr('class','icon '+status);
                     $(this).data("change",m);
             }else{
              $(this).attr("data-val",1).siblings().attr("data-val",0).find('i.icon').attr('class','icon radio');
            }
            //自定义change事件
            $(this).trigger('change');
        });
		})

	},
	//所有input值点击后
	inFocus:function(){
       var _this=this;
		$(".in").each(function(){
			var T=$(this).attr("data-tis"),
			    tis= $(this).siblings(".tis");
			    tis.text(T);
	     tis.on("click",function(){
				$(this).hide();
				$(this).siblings().focus();
		 });
	     $(this).focus(function(){
				if($(this).val()==this.defaultValue){  
					$(this).val("");  
				}  
				$(this).addClass("bd");
				$(this).siblings(".tis").text(T).hide()
			  }).blur(function(){
				if($(this).val()==""){  
				   $(this).val(this.defaultValue)
				}  
				$(this).removeClass("bd").siblings(".tis").removeClass("red");
				_this.IsNullOrEmpty($(this).val())?tis.show():tis.hide();
				var password = $("#password_value").val();
				var repeat_password = $("#repeat_password_value").val();
				if(isPw && !_this.IsNullOrEmpty(repeat_password) && !_this.IsNullOrEmpty(password)){
					if(password != repeat_password){
						 _this.inFocusTis("repeat_password_value","两次密码不一致！");
					}else{
					   $("#repeat_password_value").siblings().hide()
					}
					
					return false;
				}
				var password_e = $("#password_e").val();
				var repeat_password_e = $("#repeat_password_e").val();
				if(isPw && !_this.IsNullOrEmpty(repeat_password_e) && !_this.IsNullOrEmpty(password_e)){
					if(password_e != repeat_password_e){
						  //alert(1);
						 _this.inFocusTis("repeat_password_e","两次密码不一致！");
					}else{
					   $("#repeat_password_e").siblings().hide()
					}
					
					return false;
				}
			});
		})
	},
	//所有input提示
	inFocusTis:function(Classid,text){
		var _this=this,
            Focusobj=$("#"+Classid),
            Focustext=Focusobj.val(),
            tis=Focusobj.siblings(".tis"),
            iSpw=Focusobj.siblings().attr("data-pw");
            if(!_this.IsNullOrEmpty(Classid) && !_this.IsNullOrEmpty(text)){	
	        	var h=0;
			      var v=setInterval(function(){
			      	h++;
			      	h==10?(clearInterval(v)):(h%2==0?Focusobj.addClass("bd"):Focusobj.removeClass("bd"));
			     },120)
               	tis.addClass("red").show().text(text);
	        }
			
	},
	//所有下拉菜单
	dwonMenu:function(options){
	   var settings={
		     elmObj:null,           
			   elmCobj:null,
			   speed:250,
			   cur:"cur",
			   triggerEvent:"hover",
			   loadingStr:'<p class="pop-loading">数据加载中，请稍后...</p>',
			   enteCall:null,
			   leaveCall:null
			},
			timeOut=null,_this=this;
      $.extend(settings,options);
			var close= function() {
		        if("hover"==settings.triggerEvent)$(settings.elmObj).find("i.arrow").removeClass(settings.cur),$(settings.elmObj).removeClass(settings.cur);
		        //$(settings.elmCobj).html(settings.loadingStr).hide()
		        $(settings.elmCobj).hide();

			}
			if("hover"==settings.triggerEvent){
				$(settings.elmObj).on({
			           mouseenter:function() {
			              clearTimeout(settings.timeOut),
			              $(this).hasClass(settings.cur) || ($(this).addClass(settings.cur),$(this).find("i.arrow").addClass(settings.cur),$(settings.elmCobj).show())
			               if(settings.leaveCall)settings.leaveCall.call(this);
			           },
			           mouseleave: function() {
			              settings.timeOut = setTimeout(function() {
			                 close()
			                  if(settings.leaveCall)settings.leaveCall.call(this);
			              },settings.speed)
			           }
			     })
				$(settings.elmCobj).on({
			           mouseenter: function() {
			              clearTimeout(settings.timeOut)
			           },
			           mouseleave: function() {
			              settings.timeOut = setTimeout(function() {
			                 close()
			                  if(settings.leaveCall)settings.leaveCall.call(this);
			              },settings.speed)
			           }
			     })
			}else{
		       $(settings.elmObj).bind("click",function(){
		       	      if(_this.clickbool){
		                  $(this).hasClass(settings.cur) || ($(this).addClass(settings.cur),$(settings.elmCobj).show());
		                  $(".close").show();
		                  _this.clickbool=false;
		       	      }else{
		                  $(this).removeClass(settings.cur);
		                  $(".close").hide();
		                  close();
		                  _this.clickbool=true;
		       	      }
			    })
		        $(".close").on('click', function(e){
		        	 close(),$(settings.elmObj).removeClass(settings.cur),$(".close").hide(),_this.clickbool=true;
				});
				$(document).on('click', function(e){
			 	  var te=$(e.target);
			 	  if(te.closest(settings.elmObj).length==0 && te.closest(settings.elmCobj).length!=1){
			         close(),$(settings.elmObj).removeClass(settings.cur),$(".close").hide(),_this.clickbool=true;
			      }
			   });
			}
	},
	fnGetDate_:function(year,month,day){
	   var MaxYear = (new Date()).getFullYear(); // 初始化年份 
	   var MinYear = MaxYear-100; // 增加一个最大年份的属性 
	   var op="";
	   for (var i = MaxYear; i >= MinYear; i--) { // 新建一个OPTION对象 
			op += "<div class=\"option\" data-val=\""+i+"\" data-text=\""+i+"年\">"+i+"年</div>" ;
	   }
	   $("#"+year).html(op);
	   var op_m="";
	   for (var i = 1; i <13; i++) { // 新建一个OPTION对象 
			op_m += "<div class=\"option\" data-val=\""+i+"\" data-text=\""+i+"月\">"+i+"月</div>" ;
	   }
	   $("#"+month).html(op_m);
	},
	//关闭Select
	colseSelect:function(obj){
        var _this=this,
            optiontext=$(obj).text(),
            optionval=$(obj).attr("data-val"),
            optionsiblings=$(obj).parent().siblings();
	        optionsiblings.children("em").text(optiontext);
			optionsiblings.attr("data-val",optionval).removeClass("cur");
			$(obj).parent().css("display","none");
			_this.clickbool=true;
	},
	//重定义select
	select:function(Call){
        var select=$("[data-select]"),_this=this,isbirthday=select.attr("data-birthday")=="true"?true:false;
           if(isbirthday)_this.fnGetDate_("birth-option","month-option","sun-option");
           return select.each(function(){
         	var text=$(this).find(".text"),
         	    option=$(this).find(".option-list"),
         	    optionlist=option.children(),
         	    s1="#"+text.attr("id"),s2="#"+option.attr("id"),
         	    boolAjax=$(this).attr("data-ajax")=="true"?true:false;
         	   _this.dwonMenu({elmObj:s1,elmCobj:s2,triggerEvent:"click"})
	            optionlist.each(function(){
	               //给日期赋值操作
	             	$(this).on("click",function(){
	             		var optiontext=$(this).attr("data-text"),optionval=$(this).attr("data-val");
	                     if(isbirthday){
	             			var year=$("#birth").attr("data-val");
	             			var nian=parseInt(year);
	             			var yue = parseInt(optionval);
	             			var date = new Date(nian, yue, 0).getDate();
					   		var op_d="";
						    for (var i = 1; i <=date; i++) { // 新建一个OPTION对象 
								op_d += "<div class=\"option\" data-val=\""+i+"\" onclick=\"WJA.colseSelect(this)\" data-text=\""+i+"日\">"+i+"日</div>" ;
						    }
						    $("#sun-option").html(op_d);
					    }
	             		 _this.colseSelect(this);
	             		 if(Call && boolAjax)Call.call(this);
	             	})
	             })
	            $(document).on('click',function(e){
			 	  var te=$(e.target);
			 	  if(te.closest("[data-select]").length==0){
			             text.removeClass("cur");
	             		 option.css("display","none");
	             		 _this.clickbool=true;
			      }
			   });
      })
		},
    tab:function(){
    	var tab=$("[data-tab]");
    	tab.each(function() {
    		var mod=$(this).attr("data-tab"),
    		    it=$(this).find(".i-t"),
    		    itspan=it.children(),
    		    ic=$(this).find(".i-c"),
    		    icdiv=ic.children();
    		    itspan.on(mod,function(){
    		    	var i=$(this).index();
    		    	var tiao=$(this).attr("data-tiao")=="true"?true:false;
    		    	$(this).addClass("cur").siblings().removeClass("cur");
              if(!tiao)icdiv.eq(i).removeClass("hide").siblings().addClass("hide");
    		})
    	})
    },
    clickslideDown:function() {
    	var click=$("[data-click]");
    	click.each(function() {
    		var i=$(this).attr("data-i"),bool=true;
    		    $(this).on("click",function(){
    		    	var i=$(this).index();
    		    	if(bool){
    		    	  $(this).parents(".i-t").siblings().slideDown();
    		    	  $(this).addClass("cur");	
                      bool=false;
    		    	}else{
    		         $(this).removeClass("cur");
    		          $(this).parents(".i-t").siblings().slideUp();
                      bool=true;
    		    	}
    		    })

    	})
    },
	//商品分类
	jqZoom:function(options){
		 var defaults = {
				SigBox:'.s_box',
				Boxwh:[390,390],
				Img:[1170,1170],
				zoom:9
			  }
		      var o = $.extend(defaults,options);
			  //因IE8下移动会有斗动！
				function format(str) {
					for (var i = 1; i < arguments.length; i++) {
						str = str.replace('%' + (i - 1), arguments[i]);
					}
					return str;
				}
				var _this=$("#jqZoom"),
				    S=$(o.SigBox),
					imgW=o.Img[0],
					imgH=o.Img[1],
					moveW=imgW/o.zoom,
					moveH=imgH/o.zoom,
					bLeft=S.offset().left,
					bTop=S.offset().top,
					sBoxW=S.width(),
					sBoxH=S.height(),
					Bw=imgW-o.Boxwh[0],
					Bh=imgH-o.Boxwh[1]
					Boxleft=o.Boxwh[0],
					p_box=_this.find(".p_box"),
					p_boxul=p_box.find("ul"),
					liw=p_box.find("ul li").outerWidth(true),
					li = p_box.find("ul li").length,
					movebox=S.find(".move");
					preid="pre",
					nextid="next";
					$(o.SigBox).append(format("<div class='move' style='width:%0px;height:%1px'></div>",moveW,moveH));
					S.mouseover(function(){
						  var _src = $(this).find("img").attr("src");
						  $(this).parent().append(format("<div class='b_box' style='width:%0px;height:%1px;left:%2px'><img src=' ' width='%4' height='%5'></div>",o.Boxwh[0],o.Boxwh[1],Boxleft+20,_src,o.Img[0],o.Img[1]));
						  $(".move,.b_box").css("display","block");
					 }).mouseout(function(){
						   $(".b_box").remove();
						   $(".move").css("display","none");
					 });
					S.mousemove(function(e){
					   var x,y,_x,_y;
							x=e.pageX - bLeft - moveW/2;
							y=e.pageY - bTop - moveH/2;					
							if(x < 0){
							  x = 0;
							}else if(x > sBoxW - moveW){
							  x = sBoxW - moveW;
							}
							if(y < 0){
							  y = 0;
							 }else if(y > sBoxH - moveH){
							  y = sBoxH - moveH;
							}
							$(".move").css({"top":y,"left":x});			
							 _x = -(x/(sBoxW - moveW))*Bw;
							 _y = -(y/(sBoxH - moveH))*Bh;
							$(".b_box img").css({left:_x+"px", top:_y+"px"});
					 });
					 //上一个下一个函数封装
					  var p = {
							  premove:function() {
								p_boxul.stop(true,false).animate({"left":0},500);
							  },
							  nextmove:function() {
							   p_boxul.stop(true,false).animate({"left":-liw},500);
							  }
						 }
					  _this.find(".p_box a").eq(0).addClass("on");
					 
					 //点击切换大图			
				     _this.find(".p_box a").bind("click",function(){
					   var src = $(this).find("img").attr("src"),
					       i = _this.find(".p_box a").index(this);
					    S.find("img").attr("src",src);
					   _this.find(".p_box a").removeClass("on").eq(i).addClass("on");
					   
					  })	
	},
	//弹窗
	Alert:function(options){
		var O = {
		BoxId:"#showBoxid",
		clickId:"#clickObj",
		Shade:false,
		url:false,
		opacity:false,
		okCall:null
		}
		$.extend(O,options);
		var h= O.opacity?'0px':-$(O.BoxId).height()/2;
			$(O.BoxId).css({"z-index":1010,"margin-top":0});//margin-top:h
			$(O.clickId).on("click",function(){
				if(O.Shade)$("<div class='shade_bg'></div>").appendTo("body");
				$('.shade_bg').css({"position":"fixed","_position":"absolute","top":0,"left":0,"width":"100%","height":"100%","background":"#000","opacity":0.6,"z-index":1000,"-ms-filter:progid":"DXImageTransform.Microsoft.Alpha(Opacity=60)","filter":"alpha(opacity=60)"});
				if(O.opacity){
					$(O.BoxId).show().animate({"opacity":1,"bottom":20});
				}else{
					$(O.BoxId).show().css({"display":"block"});
				}
		})
		var close=function(){
			$(".shade_bg").remove()
				if(O.opacity){
					$(O.BoxId).animate({"opacity":0,"bottom":200},function(){
						$(this).hide()
				});
				}else{
					$(O.BoxId).hide().css({"display":"none"})
				}
			}
		$(O.BoxId+' [data-m="continue"]').on("click",function(){
			if(O.okCall)close(),O.okCall.call(this);
		});
		$(O.BoxId+' [data-m="cancel"]').on("click",function(){
			close()
		});
	}, 
	change:function(a){
		for(i=1; i<=2; i++){
			document.getElementById("li_"+i).className="normal";
			document.getElementById("li_"+a).className = "selectd";
			document.getElementById("div"+i).style.display  ="none";
			
		}
			document.getElementById("div"+a).style.display = "block"
			
	},
	slider:function(obj,options){
		var defaults = {
		    autotime : 4000,
			speed :500,
			preid:"pre",
			nextid:"next",
			moveparent:"ul",
			movechildren:"li"
		};
		    var options = $.extend(defaults,options);
			var b = $(obj),
			    l = b.find(options.movechildren).length,
			    uw = b.find(options.moveparent),
			    lw = b.find(options.movechildren).outerWidth(true);
			var sliderTimer;
		    uw.css({"left":0});
			var J={
				   premove:function(){
				   	   uw.find(options.movechildren+":last").prependTo(uw);
					   uw.css({"left":-lw});
				       uw.stop(true,false).animate({"left":0},options.speed);
				   },
				   nextmove:function(){
					   uw.animate({"left":-lw},options.speed,function(){
							  uw.find(options.movechildren+":first").appendTo(uw);
							  uw.css({"left":0});
				        });
					}
			    }
		   $('#'+options.nextid).click(function(event) {
		   	   event.preventDefault();
		       J.nextmove();
		       return false;
			});
		   $('#'+options.preid).click(function(event) {
		   	    event.preventDefault();
		        J.premove();
		        return false;
			});
	},

	banner:function(options){
      var defaults = {
      	  objid:"#slider",
					speed : 5000,
					autoplay : true,
					nextpre:false
				};
		var options = $.extend(defaults,options);

		var $this=$(options.objid),
		    $thisLi=$this.find("li"),
		    $thisLilen=$thisLi.length,
		    index=0,
		    picTimer,bool=true;
		$thisLi.css({"opacity":0,"z-index":"1"}).eq(0).css({"opacity":1,"z-index": 100});
		function showImg(index) {
				$thisLi.stop(true,false).animate({"opacity":0,"z-index":"1"},1500).eq(index).stop(true,false).animate({"opacity":1,"z-index":100},1500);
				$this.find(".Ibtn span").removeClass("on").eq(index).addClass("on");
				bool=false;
		}
		var Ibtn = "<div class='Ibtn'>";
			for(var i=0; i < $thisLilen; i++) {
			  Ibtn += "<span class='icon'>"+"</span>";
			}
			Ibtn += "</div>";
		$this.append(Ibtn);
		$this.find(".Ibtn span").on("click",function() {
			index = $this.find(".Ibtn span").index(this);
			showImg(index);
		}).eq(0).trigger("click");
		if(options.autoplay){
			$this.hover(function() {
				clearInterval(picTimer);
				},function() {
				picTimer = setInterval(function() {
						showImg(index);
						index++;
						if(index == $thisLilen) {index = 0;}
					},options.speed); 
				}).trigger("mouseleave");
			}
	 },
	//无缝滚动
	 textScroll:function(options){
        var defaults = {
        		tId:null,
						speed: 1500,
						amount: 0,
						width: 24,
						dir: "top"
		};
		o = $.extend(defaults,options);
		   var Scroll=$(defaults.tId);

		return Scroll.each(function(){
			var _li = $("li", this);
			_li.parent().css({position: "relative"}); //ul
			//初始大小
			var _li_size = 0;
			for(var i=0; i<_li.size(); i++)
				_li_size += o.dir == "left" ? _li.eq(i).outerWidth(true) : _li.eq(i).outerHeight(true);
			
			//循环所需要的元素
			if(o.dir == "left") _li.parent().css({width: (_li_size*3)+"px"});
			_li.parent().empty().append(_li.clone()).append(_li.clone()).append(_li.clone());
			_li = $("li", this);
			//滚动
			var _li_scroll = 0;
			function goto(){
				_li_scroll += o.width;
				if(_li_scroll > _li_size)
				{
					_li_scroll = 0;
					_li.parent().css(o.dir == "left" ? { left : -_li_scroll } : { top : -_li_scroll });
					_li_scroll += o.width;
				}
					_li.parent().animate(o.dir == "left" ? { left : -_li_scroll } : { top : -_li_scroll }, o.amount);
			}
			
			//开始
			var move = setInterval(function(){ goto(); }, o.speed);
			_li.parent().hover(function(){
				clearInterval(move);
			},function(){
				clearInterval(move);
				move = setInterval(function(){ goto(); }, o.speed);
			});
		});
	 },
	//日期控件
	calendar:function(selector,options){
        var defaults = {
                months : ["01月", "02月", "03月", "04月", "05月", "06月",
                    "07月", "08月", "09月", "10月", "11月", "12月"],
                days : ["日", "一", "二", "三", "四", "五", "六"],
                swipeable : true,//是否可通过手指滑动
                date : new Date(),//日历当前日期
                onRenderDay : undefined,//渲染单元格时的事件
                onSelect : undefined //选中日期时的事件
            },
            _this = this,
            $el = $(selector),
            $yearText,
            $monthText,
            $calendarBody,
            currentDate,currentYear,currentMonth;
		    //字符串转化为日期对象，只支持yyyy-MM-dd 和 yyyy/MM/dd
	    var parse=function(date){
		        var dateRE = /^(\d{4})(?:\-|\/)(\d{1,2})(?:\-|\/)(\d{1,2})$/;
		        return dateRE.test(date) ? new Date(parseInt(RegExp.$1, 10), parseInt(RegExp.$2, 10) - 1, parseInt(RegExp.$3, 10)) : null;
		    }

		    /**
		     * 格式化日期  yyyy-MM-dd
		     * @return {String}
		     */
		var format=function(date){
		        var y  = date.getFullYear(),m = date.getMonth()+1,d = date.getDate();
		        m = (m<10)?('0'+m):m;
		        d = (d<10)?('0'+d):d;
		        return y + '-' + m + '-' + d;
		    }
        var _init = function(){
            _this.settings = $.extend({},defaults,options);
            currentYear = _this.settings.date.getFullYear();
            currentMonth = _this.settings.date.getMonth();
            currentDate = new Date(currentYear,currentMonth,_this.settings.date.getDate());
            _render();
            _subscribeEvents();
        }

        /**
         * 获取月份第一天是星期几[0-6]
         */
        var _fisrtDayOfMonth = function(date){
            return ( new Date(date.getFullYear(), date.getMonth(), 1) ).getDay();
        }
        /**
         * 获取月份总天数[1-31]
         */
        var _daysInMonth = function(date){
            return ( new Date(date.getFullYear(),date.getMonth()+1,0) ).getDate();
        }

        /**
         * 渲染日历
         * @private
         */
        var _render = function(){
            var html = '';
            html += '<div class="eims-calendar">';
            html += _renderNav(currentYear,currentMonth);
            html += _renderHead();
            html += '<div class="eims-calendar-body">';
            html += _renderBody(currentDate);
            html += '</div></div>'
            $el.html(html);
            var $span = $el.find('span');
            $yearText = $span.eq(0);
            $monthText = $span.eq(1);
            $calendarBody = $el.find('.eims-calendar-body');
        }

        var _renderNav = function(year,month){
            var html = '<div class="eims-calendar-nav">';
            html += '<div> <i class="icon previous" data-year='+year+'></i><span>'+year+'</span><i class="icon next" data-year='+year+'></i></div>';
            html += '<div ><i class="icon previous" data-month='+month+'></i> <span>'+_this.settings.months[month]+'</span><i class="icon next" data-month='+month+'></i></div>';
            html += '</div>';
            return html;
        }

        var _renderHead = function(){
            var html = '<div class=\'eims-calendar-thead\'>';
            for(var i = 0; i < 7; i++){
                html += '<span class=\'thead\'>'+_this.settings.days[i]+'</span>';
            }
            html += '</div>'
            return html;
        }

        var _renderBody = function(date){
            var firstDay = _fisrtDayOfMonth(date),
                days = _daysInMonth(date),
                rows = Math.ceil((firstDay+days) / 7),
                beginDate,
                html = '';
            currentYear = date.getFullYear();
            currentMonth = date.getMonth();
            beginDate = new Date(currentYear,currentMonth,1-firstDay);//日历开始的日期
            html += '<table><tbody>';
            for(var i = 0; i < rows; i++){
                html += '<tr>';
                for(var j = 0; j < 7; j++){
                    html += _renderDay(beginDate,currentMonth);
                    beginDate.setDate(beginDate.getDate() + 1);
                }
                html += '</tr>';
            }
            html += '</tbody></table>';
            return html;
        }
        var _renderDay = function(date,month){
            var otherMonth = (date.getMonth() !== month);
            var dateStr = format(date);
            var classname = (format(_this.settings.date) == dateStr) ? 'class=\"active\"':'class=\"td\"';
            var dayStr = date.getDate();
            if(_this.settings.onRenderDay){
                dayStr = _this.settings.onRenderDay.call(null,dayStr,dateStr);
            }
            return otherMonth ? '<td>&nbsp;</td>' : '<td '+classname+' data-date= '+dateStr+'>'+dayStr+'</td>';
        }

        var _subscribeEvents = function(){
            var $target,$ctarget;
            $el.on('click',function(e){
                $target = $(e.target);
                if($target.is('[data-year].next')){
                    //后一年
                    currentDate.setFullYear(currentDate.getFullYear()+1);
                    _this.refresh(currentDate);
                }else if($target.is('[data-year].previous')){
                    //前一年
                    currentDate.setFullYear(currentDate.getFullYear()-1);
                    _this.refresh(currentDate);
                }else if($target.is('[data-month].next')){
                    //后一月
                    currentDate.setMonth(currentDate.getMonth()+1);
                    _this.refresh(currentDate);
                }else if($target.is('[data-month].previous')){
                    //前一月
                    currentDate.setMonth(currentDate.getMonth()-1);
                    _this.refresh(currentDate);
                }
                $ctarget = $target.closest('td');
                if(!$target.is('td') && $ctarget.length > 0){
                    $target = $ctarget;
                }
                if($target.is('td')){
                    var dateStr = $target.data('date');
                    if(dateStr && _this.settings.onSelect){
                        _this.settings.onSelect.call(_this,dateStr)
                    }
                }
 
            });
        }

        /**
         * 刷新日历为指定日期
         * @param date 指定日期
         */
        this.refresh = function(date){
            var oldDate = new Date(currentYear,currentMonth,1),
                newDate = new Date(date.getFullYear(),date.getMonth(),1),
                transition = undefined,$table;

            if(oldDate.getTime() == newDate.getTime())return;
            $yearText.text(date.getFullYear());
            $monthText.text(this.settings.months[date.getMonth()]);
            var newbody = _renderBody(date);
            $calendarBody.html(newbody);
        }
        _init();
       
    }
    
   

}